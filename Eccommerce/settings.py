"""
Django settings for Eccommerce project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import cloudinary
import cloudinary.uploader
import cloudinary.api
# import environ
# import dj_database_url




# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# env = environ.Env()

# environ.Env.read_env()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9mj8q%uv0&+pv%dcdb275#k_qa30#^5s1=em5)d$is%p(yp3b3'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
                  'lightsuccess.pythonanywhere.com',
                  'e-light.onrender.com',
                  '127.0.0.1',
                  '10.5.1.41'
                  
                 ]


# Application definition

INSTALLED_APPS = [
        "corsheaders",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cloudinary',
    'cloudinary_storage',
    'Ecc',
    'schema_viewer',
]

# Set session expiration time in seconds (e.g., 1 week = 7 days * 24 hours * 60 minutes * 60 seconds)
SESSION_COOKIE_AGE = 7 * 24 * 60 * 60  # 1 week

# This setting ensures that the session doesn't expire when the browser is closed
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

MIDDLEWARE = [
     "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CSRF_TRUSTED_ORIGINS = [
    "https://e-light.onrender.com",
]

AUTH_USER_MODEL = 'Ecc.Customers'


ROOT_URLCONF = 'Eccommerce.urls'

MEDIA_URL = 'https://res.cloudinary.com/dukoxursb/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
cloudinary.config(
    cloud_name="dukoxursb",  # Replace with your Cloudinary cloud name
    api_key="161237469388147",  # Replace with your Cloudinary API key
    api_secret="pa6suf_jaavaI0GCZkjvJGTxsR8",  # Replace with your Cloudinary API secret
)
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

CLOUDINARY_STORAGE ={
        'CLOUD_NAME': 'dukoxursb',
        'API_KEY': '161237469388147',
        'API_SECRET': 'pa6suf_jaavaI0GCZkjvJGTxsR8',
        'allowed_formats': ['jpg', 'jpeg', 'png', 'gif'],
}

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"  # Replace with your SMTP server
EMAIL_PORT = 587  # Common ports: 587 (TLS), 465 (SSL), 25 (non-secure)
EMAIL_USE_TLS = True  # True for TLS; False for SSL
EMAIL_HOST_USER = "eliaakjtrnq@gmail.com"
EMAIL_HOST_PASSWORD = "hhyx mfca zpvo ckof"



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.media',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]  

WSGI_APPLICATION = 'Eccommerce.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
          'ENGINE': 'django.db.backends.postgresql',
          'NAME': 'railway',
          'USER': 'postgres',
          'PASSWORD': 'PCGjIMdqlqehFydDuQCQEFPqTkHRikaU',
          'HOST': 'viaduct.proxy.rlwy.net',
          'PORT': '35442',

    }

}


# DATABASES = {
#       'default': dj_database_url.parse(env('DATABASE_URL'))
#       }



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_STORAGES = "whitenoise.storage.CompressedManifestStaticFilesStorage"
# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Allow requests from your frontend
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Next.js frontend
]